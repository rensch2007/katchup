stages:
  - build
  - deploy
  - notify

variables:
  DOCKER_IMAGE: kylesung0520/katchup

build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - cd backend
    - docker build -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:latest

deploy_to_ec2:
  stage: deploy
  script:
    - ssh -o StrictHostKeyChecking=no ec2-user@43.202.220.249 "
        docker pull $DOCKER_IMAGE:latest &&
        docker stop katchup-backend || true &&
        docker rm katchup-backend || true &&
        docker run -d --name katchup-backend \
          --env-file /home/ec2-user/katchup-backend/.env \
          -p 5001:5001 \
          $DOCKER_IMAGE:latest
      "
  only:
    - KATCHUP-9-set-up-ci-cd

notify_discord_success:
  stage: notify
  script:
    - |
      curl -H "Content-Type: application/json" \
        -X POST \
        -d "{\"content\": \"✅ *CI/CD 성공: \`$CI_PROJECT_NAME\` 프로젝트의 \`$CI_COMMIT_REF_NAME\` 브랜치 파이프라인 완료.*\"}" \
        $DISCORD_WEBHOOK_URL
  when: on_success
  only:
    - KATCHUP-9-set-up-ci-cd

notify_discord_failure:
  stage: notify
  script:
    - |
      curl -H "Content-Type: application/json" \
        -X POST \
        -d "{\"content\": \"❌ *CI/CD 실패: \`$CI_PROJECT_NAME\` 프로젝트의 \`$CI_COMMIT_REF_NAME\` 브랜치 파이프라인 실패.*\"}" \
        $DISCORD_WEBHOOK_URL
  when: on_failure
  only:
    - KATCHUP-9-set-up-ci-cd
